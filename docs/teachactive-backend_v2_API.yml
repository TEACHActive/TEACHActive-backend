openapi: 3.0.0
info:
  version: "1.0.0"
  title: "TEACHActive-backend"
servers:
  - url: ""
paths:
  /armpose/totals/{unit}/{sessionId}:
    get:
      summary: "Get Arm Pose totals in Session"
      operationId: getArmPoseTotalsInSession
      tags:
        - ArmPose
      parameters:
        - name: sessionId
          in: path
          description: ID of the Session
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: unit
          in: path
          description: Unit to return data in
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        "404":
          description: Error 404
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected Error 500
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    AccessTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          format: int32
          example: 3600
        refresh_token:
          type: string
          example: IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk
        scope:
          type: string
          example: create
    ArmPoseTotals:
      type: object
      properties:
        armsCrossed:
          type: string
          example: MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3
          //TODO: Finish & Remove status code from all responses (and success)
    Error:
      type: object
      required:
        - success
        - data
        - errorMessage
        - statusCode
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
        errorMessage:
          type: string
          example: "This is an error"
        statusCode:
          type: integer
          format: int32
          example: 500
        detail:
          type: object
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
